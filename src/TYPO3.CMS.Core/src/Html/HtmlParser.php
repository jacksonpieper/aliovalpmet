<?php

/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */

namespace Schnitzler\TYPO3\CMS\Core\Html;

/**
 * Class Schnitzler\TYPO3\CMS\Core\Html\HtmlParser
 */
class HtmlParser extends \TYPO3\CMS\Core\Html\HtmlParser
{
    /**
     * Returns an array with either tag or non-tag content of the result from ->splitIntoBlock()/->splitTags()
     *
     * @param array $parts Parts generated by ->splitIntoBlock() or >splitTags()
     * @param bool $tag_parts Whether to return the tag-parts (default,TRUE) or what was outside the tags.
     * @param bool $include_tag Whether to include the tags in the tag-parts (most useful for input made by ->splitIntoBlock())
     * @return array Tag-parts/Non-tag-parts depending on input argument settings
     * @see splitIntoBlock(), splitTags()
     */
    public function getAllParts($parts, $tag_parts = true, $include_tag = true)
    {
        $newParts = [];
        foreach ($parts as $k => $v) {
            if (($k + ($tag_parts ? 0 : 1)) % 2) {
                if (!$include_tag) {
                    $v = $this->removeFirstAndLastTag($v);
                }
                $newParts[] = $v;
            }
        }
        return $newParts;
    }
}
